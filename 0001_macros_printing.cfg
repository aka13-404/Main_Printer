#Phase I for print start, gets all slicer parameters and stores them in _GLOBAL_VARIABLES to prevent 
#desync in local/global variables
[gcode_macro _START_PRINT_PHASE_I]
gcode:
	# Get and set extruder temperature
	{% if params.EXTRUDER_TEMP is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=extruder_temp VALUE={params.EXTRUDER_TEMP|float}
	{% endif %}
	
	# Get and set bed temperature
	{% if params.BED_TEMP is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=bed_temp VALUE={params.BED_TEMP|float}
	{% endif %}
	
	# Get and set chamber temperature
	{% if params.CHAMBER_TEMP is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=chamber_temp VALUE={params.CHAMBER_TEMP|float}
	{% endif %}
	
	# Get and set pressure advance
	{% if params.PA is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=pa VALUE={params.PA|float}
	{% endif %}
	
	# Get and set z_offset
	{% if params.Z_OFFSET is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=z_offset VALUE={params.Z_OFFSET|float}
	{% endif %}
	



#Apply values received from slicer to prepare print.
#Initiated from slicer.
[gcode_macro _START_PRINT_PHASE_II]
gcode:
	BASE_PAUSE																												#Pause print
	M104 S{printer["gcode_macro _GLOBAL_VARIABLES"].extruder_temp}
	M140 S{printer["gcode_macro _GLOBAL_VARIABLES"].bed_temp}
	SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET={printer["gcode_macro _GLOBAL_VARIABLES"].chamber_temp}
	SET_PRESSURE_ADVANCE ADVANCE={printer["gcode_macro _GLOBAL_VARIABLES"].pa}
	SET_GCODE_OFFSET Z={printer["gcode_macro _GLOBAL_VARIABLES"].z_offset}
	G90 																													#Absolute coordinates
	M83																														#Relative mode for extruder
	G92 E0																													#Reset extruder just in case
	G28																														#Home and move to soak position
	G1 X{printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_x} Y{printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_y}
	M400
	G1 Z{printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_z}
	UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III DURATION=0.1																#Proceed to phase III




#Run all needed checks if printer is ready for printing
#Initiated by phase II
[delayed_gcode _START_PRINT_PHASE_III]
gcode:
	#Final preparations - check if all enviroment requirements are met:
	#1. Extruder has reached the target (or does not need to be heated) and has soaked enough heat
	#2. Bed has reached the target (or does not need to be heated) and has soaked enough heat
	#3. Chamber has reached the target (or does not need to be heated)
	{% if ( ((printer.extruder.temperature >= printer.extruder.target) and (printer.extruder.power <= printer["gcode_macro _GLOBAL_VARIABLES"].pwm_soaked_extruder)) and
			((printer.heater_bed.temperature >= printer.heater_bed.target) and (printer.heater_bed.power  <= printer["gcode_macro _GLOBAL_VARIABLES"].pwm_soaked_bed)) and
			(printer["heater_generic chamber_heater"].temperature >= printer["heater_generic chamber_heater"].target)) %}
		_START_PRINT_PHASE_IV
	{% else %}
		RESPOND MSG="Preparing print enviroment"
		UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III DURATION=5
	{% endif %}



#Final homing and secondary preparations
[gcode_macro _START_PRINT_PHASE_IV]
gcode:
	G28
	M400

#watchdog chamber
[delayed_gcode WATCHDOG_CHAMBER]
gcode:
	{% if printer["heater_generic chamber_heater"].temperature >= printer["gcode_macro _GLOBAL_VARIABLES"].chamber_temp %}		##If the chamber temperature exceeds or equals target
		BASE_RESUME
		SET_HEATER_TEMPERATURE HEATER=chamber_heater TARGET=0
		G28
		RESPOND PREFIX=timelapse MSG=start
	{% else %}
		UPDATE_DELAYED_GCODE ID=WATCHDOG_CHAMBER DURATION=5
		RESPOND MSG="Wait for chamber"
	{% endif %}


	
[gcode_macro DEBUG]	
gcode:
	RESPOND MSG={printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_y}
	RESPOND MSG={printer["gcode_macro _GLOBAL_VARIABLES"].chamber_temp}
												
												
												
												
#	{% if printer["gcode_macro START_PRINT"].chamber_temp_global|float == 0 %}
#	##Is chamber adjustment needed?
#		G28
#		RESPOND PREFIX=timelapse MSG=start													##no - proceed out of the loop
#	{% else %}
#		BASE_PAUSE																			##If chamber adjustment is needed, pause the printer, launch chamber watchdog
#		UPDATE_DELAYED_GCODE ID=WATCHDOG_CHAMBER DURATION=5
#	{% endif %}